<?xml version="1.0"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
                xmlns:c="com.stockholdergame.client.ui.components.*"
                title="{resourceManager.getString('common', 'confirmation.page.title')}"
                width="500" maxHeight="500" creationComplete="onCreationComplete(event)"
                showCloseButton="true"
                close="onClose(event)">

    <mx:Metadata>
        [Event(name="confirmOperation", type="com.stockholdergame.client.ui.events.BusinessEvent")]
        [Event(name="resendVerificationEmail", type="com.stockholdergame.client.ui.events.BusinessEvent")]
        [Event(name="cancelAccountOperation", type="com.stockholdergame.client.ui.events.BusinessEvent")]
        [ResourceBundle("common")]
    </mx:Metadata>

    <mx:Script><![CDATA[
        import com.stockholdergame.client.model.dto.account.AccountOperationDto;
        import com.stockholdergame.client.ui.events.BusinessActions;
        import com.stockholdergame.client.ui.events.BusinessEvent;

        import mx.collections.ArrayCollection;
        import mx.events.FlexEvent;
        import mx.managers.PopUpManager;

        [Bindable]
        private var _accountOperations:ArrayCollection;

        public function get accountOperations():ArrayCollection {
            return _accountOperations;
        }

        public function set accountOperations(value:ArrayCollection):void {
            _accountOperations = value;
            for each (var accountOperationDto:AccountOperationDto in _accountOperations) {
                if (!accountOperationDto.confirmed) {
                    currentState = CONFIRMATION_STATE;
                    return;
                }
            }
            currentState = ALL_CONFIRMED_STATE;
        }

        private function onClose(event:Event):void {
            closeDialog();
        }

        private function onCreationComplete(event:FlexEvent):void {
            operationsList.addEventListener(BusinessActions.CONFIRM_OPERATION, redispatchEvent);
            operationsList.addEventListener(BusinessActions.RESEND_VERIFICATION_EMAIL, redispatchEvent);
            operationsList.addEventListener(BusinessActions.CANCEL_ACCOUNT_OPERATION, redispatchEvent);
        }

        private function redispatchEvent(event:BusinessEvent):void {
            event.stopImmediatePropagation();
            dispatchEvent(event);
        }

        private function closeDialog():void {
            PopUpManager.removePopUp(this);
        }

        public static const CONFIRMATION_STATE:String = "confirmationState";
        public static const ALL_CONFIRMED_STATE:String = "allConfirmedState";
        ]]></mx:Script>

    <mx:states>
        <mx:State name="{CONFIRMATION_STATE}">
            <mx:SetProperty target="{confirmLaterBtn}" name="label"
                            value="{resourceManager.getString('common', 'confirm.later.button')}"/>
        </mx:State>
        <mx:State name="{ALL_CONFIRMED_STATE}">
            <mx:SetProperty target="{confirmLaterBtn}" name="label"
                            value="{resourceManager.getString('common', 'close.button')}"/>
        </mx:State>
    </mx:states>

    <mx:List id="operationsList" itemRenderer="com.stockholdergame.client.ui.components.list.renderers.ConfirmationListRenderer"
             width="100%" height="100%"
             selectable="false" styleName="normalBox"
             dataProvider="{_accountOperations}"/>

    <mx:ControlBar id="confirmationDialogControlBar">
        <mx:Spacer width="100%"/>
        <c:StkButton label="{resourceManager.getString('common', 'confirm.later.button')}" id="confirmLaterBtn"
                     click="onClose(event)"/>
    </mx:ControlBar>
</mx:TitleWindow>
